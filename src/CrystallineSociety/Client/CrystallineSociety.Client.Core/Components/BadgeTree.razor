@using CrystallineSociety.Shared.Dtos.BadgeSystem
@inherits AppComponentBase
@page "/accordion"
@using Microsoft.AspNetCore.Components.Web

<div class="accordion accordion-flush" id="accordionFlushExample">
  <form class="d-flex mb-3">
      <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search" />
      <button class="btn btn-outline-primary" type="submit">
          Search
      </button>
  </form>
  <div class="accordion-item">
    <h2 class="accordion-header d-flex justify-content-between align-items-center">
      <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseOne" aria-expanded="false" aria-controls="flush-collapseOne">
        Folder #1
      </button>
      <i class="fas fa-chevron-right"></i>
    </h2>
    <div id="flush-collapseOne" class="accordion-collapse collapse" data-bs-parent="#accordionFlushExample">
      @if (Badges != null)
      {
          <ul class="list-group list-group-flush">
              @foreach (var badge in Badges.Where(b => b.Level == BadgeLevel.Gold))
              {
                  <li class="list-group-item @(ActiveBadgeUrl == badge.Url ? "active": "")" @onclick="() => OnBadgeClick(badge)">@badge.Title</li>
              }
          </ul>
      }
    </div>
  </div>
  <div class="accordion-item">
    <h2 class="accordion-header d-flex justify-content-between align-items-center">
      <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseTwo" aria-expanded="false" aria-controls="flush-collapseTwo">
        Folder #2
      </button>
      <i class="fas fa-chevron-right"></i>
    </h2>
    <div id="flush-collapseTwo" class="accordion-collapse collapse" data-bs-parent="#accordionFlushExample">
      @if (Badges != null)
      {
          <ul class="list-group list-group-flush">
              @foreach (var badge in Badges.Where(b => b.Level == BadgeLevel.Gold))
              {
                  <li class="list-group-item @(ActiveBadgeUrl == badge.Url ? "active": "")" @onclick="() => OnBadgeClick(badge)">@badge.Title</li>
              }
          </ul>
      }
    </div>
  </div>
  <div class="accordion-item">
    <h2 class="accordion-header d-flex justify-content-between align-items-center">
      <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseThree" aria-expanded="false" aria-controls="flush-collapseThree">
        Folder #3
      </button>
      <i class="fas fa-chevron-right"></i>
    </h2>
    <div id="flush-collapseThree" class="accordion-collapse collapse" data-bs-parent="#accordionFlushExample">
      @if (Badges != null)
      {
          <ul class="list-group list-group-flush">
              @foreach (var badge in Badges.Where(b => b.Level == BadgeLevel.Gold))
              {
                  <li class="list-group-item @(ActiveBadgeUrl == badge.Url ? "active": "")" @onclick="() => OnBadgeClick(badge)">@badge.Title</li>
              }
          </ul>
      }
    </div>
  </div>
</div>


