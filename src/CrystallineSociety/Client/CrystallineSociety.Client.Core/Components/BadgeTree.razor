@using CrystallineSociety.Shared.Dtos.BadgeSystem
@inherits AppComponentBase
@page "/accordion"
@using Microsoft.AspNetCore.Components.Web

<div class="accordion">
    <div class="card">
        <div class="card-header d-flex justify-content-between align-items-center" @onclick="() => ToggleCollapse(1)">
            <span class="item-label">Gold</span>
            <span class="icon-right">@((MarkupString)((activeItem == 1 && !collapsed) ? "<i class='fas fa-angle-up'></i>" : "<i class='fas fa-angle-down'></i>"))</span>
        </div>
        <div class="collapse-container @GetCollapseClass(1)" id="item1">
            <div class="collapse-content card-body">
                @if (Badges != null)
                {
                    <ul class="list-group">
                        @foreach (var badge in Badges)
                        {
                             @if(badge.Level.ToString() == "Gold"){
                             <li class="list-group-item @(ActiveBadgeUrl == badge.Url ? "active": "")" @onclick="() => OnBadgeClick(badge)">@badge.Title</li>
                            }
                        }
                    </ul>
                }
            </div>
        </div>
    </div>

    <div class="card">
        <div class="card-header d-flex justify-content-between align-items-center" @onclick="() => ToggleCollapse(2)">
            <span class="item-label">Silver</span>
            <span class="icon-right">@((MarkupString)((activeItem == 2 && !collapsed) ? "<i class='fas fa-angle-up'></i>" : "<i class='fas fa-angle-down'></i>"))</span>
        </div>
        <div class="collapse-container @GetCollapseClass(2)" id="item2">
            <div class="collapse-content card-body">
                @if (Badges != null)
                {
                    <ul class="list-group">
                        @foreach (var badge in Badges)
                        {
                             @if(badge.Level.ToString() == "Silver"){
                             <li class="list-group-item @(ActiveBadgeUrl == badge.Url ? "active": "")" @onclick="() => OnBadgeClick(badge)">@badge.Title</li>
                            }
                        }
                    </ul>
                }
            </div>
        </div>
    </div>

    <div class="card">
        <div class="card-header d-flex justify-content-between align-items-center" @onclick="() => ToggleCollapse(3)">
            <span class="item-label">Bronze</span>
            <span class="icon-right">@((MarkupString)((activeItem == 3 && !collapsed) ? "<i class='fas fa-angle-up'></i>" : "<i class='fas fa-angle-down'></i>"))</span>
        </div>
        <div class="collapse-container @GetCollapseClass(3)" id="item3">
            <div class="collapse-content card-body">
                @if (Badges != null)
                {
                    <ul class="list-group">
                        @foreach (var badge in Badges)
                        {
                             @if(badge.Level.ToString() == "Bronze"){
                             <li class="list-group-item @(ActiveBadgeUrl == badge.Url ? "active": "")" @onclick="() => OnBadgeClick(badge)">@badge.Title</li>
                            }
                        }
                    </ul>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private int activeItem = -1;
    private bool collapsed = true;

    private void ToggleCollapse(int itemNumber)
    {
        if (activeItem == itemNumber)
        {
            collapsed = !collapsed;
        }
        else
        {
            activeItem = itemNumber;
            collapsed = false;
        }
    }

    private string GetCollapseClass(int itemNumber)
    {
        return activeItem == itemNumber && !collapsed ? "show" : "";
    }

    private void OnSubItemClick(int parentItem, int subItem)
    {
        // Handle sub-item click event
        System.Console.WriteLine($"Parent Item: {parentItem}, Sub Item: {subItem}");
    }
}