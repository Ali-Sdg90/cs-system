name: $(version).$(Build.BuildId)

variables:
  WEB_APP_DEPLOYMENT_TYPE: 'DefaultDeploymentType'

jobs:

- job: build_blazor_api_wasm
  displayName: 'build blazor api + web assembly'
  
  pool:
    vmImage: 'ubuntu-latest'

  steps:

  - task: Assembly-Info-NetCore@3
    displayName: 'Set Assembly Manifest Data'
    inputs:
      Company: Cs Internship
      Product: Cs System
      VersionNumber: '$(Build.BuildNumber)'
      FileVersionNumber: '$(Build.BuildNumber)'
      InformationalVersion: '$(Build.BuildNumber)'
      PackageVersion: '$(Build.BuildNumber)'

  - task: UseDotNet@2
    displayName: 'Setup .NET'
    inputs:
      useGlobalJson: true
      workingDirectory: 'src'

  - task: UseDotNet@2
    displayName: 'Use dotnet sdk 6.x for LibSassBuilder'
    inputs:
      version: 6.x

  - task: Bash@3
    displayName: 'Restore workloads'
    inputs:
      targetType: 'inline'
      script: 'dotnet workload restore src/CrystallineSociety/Client/Web/CrystallineSociety.Client.Web.csproj -p:BlazorMode=BlazorWebAssembly'

  - task: Bash@3
    displayName: 'Switch to blazor web assembly'
    inputs:
      targetType: 'inline'
      script: sed -i 's/Microsoft.NET.Sdk.Web/Microsoft.NET.Sdk.BlazorWebAssembly/g' src/CrystallineSociety/Client/Web/CrystallineSociety.Client.Web.csproj
  - task: Bash@3
    displayName: 'Build migrations bundle'
    inputs:
      targetType: 'inline'
      script: |
        dotnet tool install --global dotnet-ef --version 7.0.0
        dotnet ef migrations bundle --self-contained -r linux-x64 --project src/CrystallineSociety/Server/Api/CrystallineSociety.Server.Api.csproj
      failOnStderr: true
  - task: Bash@3
    displayName: 'Install wasm-tools'
    inputs:
      targetType: 'inline'
      script: dotnet workload install wasm-tools

  - task: Bash@3
    displayName: 'Build (To generate CSS/JS files)'
    inputs:
      targetType: 'inline'
      script: 'dotnet build src/CrystallineSociety/Client/Web/CrystallineSociety.Client.Web.csproj -p:Configuration=Release -p:BlazorMode=BlazorWebAssembly -p:WebAppDeploymentType="${{ variables.WEB_APP_DEPLOYMENT_TYPE }}"'

  - task: Bash@3
    displayName: 'Publish'
    inputs:
      targetType: 'inline'
      script: 'dotnet publish src/CrystallineSociety/Server/Api/CrystallineSociety.Server.Api.csproj -p:BlazorMode=BlazorWebAssembly -p:WebAppDeploymentType="${{ variables.WEB_APP_DEPLOYMENT_TYPE }}" -p:Configuration=Release -o api-web'

  - task: PublishPipelineArtifact@1
    displayName: Upload api-web artifact
    inputs:
      targetPath: 'api-web'
      artifact: 'api-web-bundle'
      publishLocation: 'pipeline'
  
  - task: PublishPipelineArtifact@1
    displayName: Upload ef migrations bundle
    inputs:
      targetPath: 'efbundle'
      artifact: 'migrations-bundle'
      publishLocation: 'pipeline'
  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: 'Dockerfile'
      artifact: 'Docker'
      publishLocation: 'pipeline'
   